name: Deployment

on:
  push: 
   tags:
    - v*
    
jobs:
  
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Setup Deployment tracking CLI
      run: |
        wget https://github.com/mgudmund/deployment-api-cli/releases/download/v1.0-alpha/deployment-api-cli-v1.0-alpha.x86_64-linux.tar.gz 
        tar -zxvf deployment-api-cli-v1.0-alpha.x86_64-linux.tar.gz
        sudo mv deployment-api-cli /usr/bin/

    ## Deployment Tracking ##
    - name: Register Deployment
      run: echo ::set-env name=DEPLOYMENT_TRACK_ID::$(deployment-api-cli create -e production -v 1.2 -c $GITHUB_SHA | cut -d '/' -f 3)
      env: 
        DEPLOYMENT_API_TOKEN: ${{ secrets.DEPLOYMENT_API_TOKEN }}
        DEPLOYMENT_API_URL: ${{ secrets.DEPLOYMENT_API_URL }}

    ## 
    ## START --- THIS IS WHERE YOUR DEPLOYMENT COMMANDS GO 
    ##
    ## Run deploy
    - name: Deploy App
      run: sleep 10 && echo "Deployment Successful"


    ## 
    ## END --- THIS IS WHERE YOUR DEPLOYMENT COMMANDS GO 
    ##

    ## Deployment Tracking ##
    - name: Set Successful Deployment
      run: deployment-api-cli update -d $DEPLOYMENT_TRACK_ID -s success
      if: ${{ success() }} 
      env: 
        DEPLOYMENT_API_TOKEN: ${{ secrets.DEPLOYMENT_API_TOKEN }}
        DEPLOYMENT_API_URL: ${{ secrets.DEPLOYMENT_API_URL }}
    
    - name: Set Failed Deployment
      run: deployment-api-cli update -d $DEPLOYMENT_TRACK_ID -s failed
      if: ${{ failure() }}
      env: 
        DEPLOYMENT_API_TOKEN: ${{ secrets.DEPLOYMENT_API_TOKEN }}
        DEPLOYMENT_API_URL: ${{ secrets.DEPLOYMENT_API_URL }}

    - name: Set Cancelled Deployment
      run: deployment-api-cli update -d $DEPLOYMENT_TRACK_ID -s cancelled
      if: ${{ cancelled() }}
      env: 
        DEPLOYMENT_API_TOKEN: ${{ secrets.DEPLOYMENT_API_TOKEN }}
        DEPLOYMENT_API_URL: ${{ secrets.DEPLOYMENT_API_URL }}
  

   
